###########TABLE 2: SOCIODEMOGRAPHIC DIFFERNCES BY LOCATION OF DELIVERY###################
#Creating separate facility and community birth datasets
delloc_dat_fac = subset(delloc_dat, location_b == "facility")
delloc_dat_comm = subset(delloc_dat, location_b == "community")
#Statistical testing of differences between facility and community births in proportions and means of variables specified in the analysis plan
rural.test_loc <- prop.test(x = c(sum(with(delloc_dat_fac,rural==1),na.rm=T), sum(with(delloc_dat_comm,rural==1),na.rm=T)),
n = c(sum(with(delloc_dat_fac,!is.na(rural)),na.rm=T), sum(with(delloc_dat_comm,!is.na(rural)),na.rm=T)))
primi.test_loc <- prop.test(x = c(sum(with(delloc_dat_fac,primi==1),na.rm=T), sum(with(delloc_dat_comm,primi==1),na.rm=T)),
n = c(sum(with(delloc_dat_fac,!is.na(primi)),na.rm=T), sum(with(delloc_dat_comm,!is.na(primi)),na.rm=T)))
phone.test_loc <- prop.test(x = c(sum(with(delloc_dat_fac,phone==1),na.rm=T), sum(with(delloc_dat_comm,phone==1),na.rm=T)),
n = c(sum(with(delloc_dat_fac,!is.na(phone)),na.rm=T), sum(with(delloc_dat_comm,!is.na(phone)),na.rm=T)))
anyedu.test_loc <- prop.test(x = c(sum(with(delloc_dat_fac,edu>0),na.rm=T), sum(with(delloc_dat_comm,edu>0),na.rm=T)),
n = c(sum(with(delloc_dat_fac,!is.na(edu)),na.rm=T), sum(with(delloc_dat_comm,!is.na(edu)),na.rm=T)))
age.test_loc <- t.test(age ~ location_b, data = delloc_dat)
income.test_loc <- t.test(income ~ location_b, data = delloc_dat)
delloc_tab2 <-  as.data.frame(
c(" ", #Data frame has empty rows for formatting purposes (i.e. to add extra headings or spacing)
"Pregnancies with birth outcomes",
"Rural place of residence",
"Primiparous",
"Phone ownership",
"Any education",
".",
" ",
"Age at conception, in years",
"Monthly income, in ETB"))
#Using a for loop to run the same code multiple times to add results to the data frame for 3 categories: overall, facility and community births
for(i in c("", "_fac", "_comm")) {
delloc_tab2 <- cbind(delloc_tab2,
c(NA,
nrow(get(paste0("delloc_dat",i))),
sum(with(get(paste0("delloc_dat",i)),!is.na(rural)),na.rm=T),
sum(with(get(paste0("delloc_dat",i)),!is.na(primi)),na.rm=T),
sum(with(get(paste0("delloc_dat",i)),!is.na(phone)),na.rm=T),
sum(with(get(paste0("delloc_dat",i)),!is.na(edu)),na.rm=T),
NA,
NA,
sum(with(get(paste0("delloc_dat",i)),!is.na(age)),na.rm=T),
sum(with(get(paste0("delloc_dat",i)),!is.na(income)),na.rm=T)),
c(NA,
NA,
sum(with(get(paste0("delloc_dat",i)),rural==1),na.rm=T),
sum(with(get(paste0("delloc_dat",i)),primi==1),na.rm=T),
sum(with(get(paste0("delloc_dat",i)),phone==1),na.rm=T),
sum(with(get(paste0("delloc_dat",i)),edu>0),na.rm=T),
NA,
NA,
round(mean(get(paste0("delloc_dat",i))$age,na.rm=T),0),
round(mean(get(paste0("delloc_dat",i))$income,na.rm=T),0)) )
}
#Adding percentages and SDs in parentheses to ns and means in existing columns as specified in the analysis plan
delloc_tab2[,3] = c(NA,
NA,
paste0(delloc_tab2[c(3:6),3], c(" ("," ("," ("," ("), c(as.character(100*signif(as.numeric(delloc_tab2[c(3:6),3])/as.numeric(delloc_tab2[c(3:6),2]),2))), c(")",")",")",")")),
NA,
NA,
paste0(delloc_tab2[9,3], c(" ("), c(round(sd(delloc_dat$age,na.rm=T),0)), c(")")),
paste0(delloc_tab2[10,3], c(" ("), c(round(sd(delloc_dat$income,na.rm=T),0)), c(")")))
delloc_tab2[,5] = c(NA,
NA,
paste0(delloc_tab2[c(3:6),5], c(" ("," ("," ("," ("), c(as.character(100*signif(as.numeric(delloc_tab2[c(3:6),5])/as.numeric(delloc_tab2[c(3:6),4]),2))), c(")",")",")",")")),
NA,
NA,
paste0(delloc_tab2[9,5], c(" ("), c(round(sd(subset(delloc_dat,location_b=="facility")$age,na.rm=T),0)), c(")")),
paste0(delloc_tab2[10,5], c(" ("), c(round(sd(subset(delloc_dat,location_b=="facility")$income,na.rm=T),0)), c(")")))
delloc_tab2[,7] = c(NA,
NA,
paste0(delloc_tab2[c(3:6),7], c(" ("," ("," ("," ("), c(as.character(100*signif(as.numeric(delloc_tab2[c(3:6),7])/as.numeric(delloc_tab2[c(3:6),6]),2))), c(")",")",")",")")),
NA,
NA,
paste0(delloc_tab2[9,7], c(" ("), c(round(sd(subset(delloc_dat,location_b=="community")$age,na.rm=T),0)), c(")")),
paste0(delloc_tab2[10,7], c(" ("), c(round(sd(subset(delloc_dat,location_b=="community")$income,na.rm=T),0)), c(")")))
#Adding the final two columns: Difference in proportions/means and p-values (all extracted from the statistical tests above)
delloc_tab2 = cbind(delloc_tab2,
c(NA,
NA,
round(100*as.numeric(rural.test_loc$estimate[2]) - 100*as.numeric(rural.test_loc$estimate[1]),0),
round(100*as.numeric(primi.test_loc$estimate[2]) - 100*as.numeric(primi.test_loc$estimate[1]),0),
round(100*as.numeric(phone.test_loc$estimate[2]) - 100*as.numeric(phone.test_loc$estimate[1]),0),
round(100*as.numeric(anyedu.test_loc$estimate[2]) - 100*as.numeric(anyedu.test_loc$estimate[1]),0),
NA,
NA,
round(as.numeric(age.test_loc$estimate[1]) - as.numeric(age.test_loc$estimate[2]),0),
round(as.numeric(income.test_loc$estimate[1]) - as.numeric(income.test_loc$estimate[2]),0)),
c(NA,
NA,
rural.test_loc$p.value,
primi.test_loc$p.value,
phone.test_loc$p.value,
anyedu.test_loc$p.value,
NA,
NA,
age.test_loc$p.value,
income.test_loc$p.value) )
colnames(delloc_tab2) <- NULL
delloc_tab2[,9] <- as.numeric(delloc_tab2[,9])
delloc_tab2[,9] <- round(delloc_tab2[,9],3)
delloc_tab2[,c(9)][(delloc_tab2[,c(9)]==0.000)] <- "<0.001"
#Adding extra headings to the table (can't just have one consistent heading on top since there are ns and means - see analysis plan for table shells)
delloc_tab2[1,c(2:9)] = c("N", "n (%)", "N", "n (%)", "N", "n (%)", "Difference", "p-value")
delloc_tab2[8,c(2:9)] = c("N", "mean (sd)", "N", "mean (sd)", "N", "mean (sd)", "Difference", "p-value")
kable(delloc_tab2, align = "lcccccccc", booktabs = T, caption = "Table 2: Sociodemographic characteristics by location of delivery") %>%
kable_classic(full_width=F,html_font = "Arial") %>%
add_indent(c(3:10), level_of_indent = 1) %>%
add_header_above(c("Characteristics" = 1, "Overall" = 2, "Facility" = 2, "Community" = 2, " " = 1, " " = 1),bold=T) %>%
row_spec(1, bold = T) %>% #Make this row bold since it is a heading
row_spec(7, color = "white") %>% #Make this row white so that it shows up as empty for spacing purposes
row_spec(8, bold = T) %>% #Make this row bold since it is also a heading
save_kable("table2.png", zoom = 2)
#################TABLE 4: SOCIODEMOGRAPHIC CHARACTERISTICS ASSOCIATED WITH TIMELLY BIRTH DATA COLLECTION###############
deltime_dat_timely = subset(deltime_dat, timely == 1)
deltime_dat_late = subset(deltime_dat, timely == 0)
rural.test_time <- prop.test(x = c(sum(with(deltime_dat_timely,rural==1),na.rm=T), sum(with(deltime_dat_late,rural==1),na.rm=T)),
n = c(sum(with(deltime_dat_timely,!is.na(rural)),na.rm=T), sum(with(deltime_dat_late,!is.na(rural)),na.rm=T)))
primi.test_time <- prop.test(x = c(sum(with(deltime_dat_timely,primi==1),na.rm=T), sum(with(deltime_dat_late,primi==1),na.rm=T)),
n = c(sum(with(deltime_dat_timely,!is.na(primi)),na.rm=T), sum(with(deltime_dat_late,!is.na(primi)),na.rm=T)))
phone.test_time <- prop.test(x = c(sum(with(deltime_dat_timely,phone==1),na.rm=T), sum(with(deltime_dat_late,phone==1),na.rm=T)),
n = c(sum(with(deltime_dat_timely,!is.na(phone)),na.rm=T), sum(with(deltime_dat_late,!is.na(phone)),na.rm=T)))
anyedu.test_time <- prop.test(x = c(sum(with(deltime_dat_timely,edu>0),na.rm=T), sum(with(deltime_dat_late,edu>0),na.rm=T)),
n = c(sum(with(deltime_dat_timely,!is.na(edu)),na.rm=T), sum(with(deltime_dat_late,!is.na(edu)),na.rm=T)))
anydela.test_time <- prop.test(x = c(sum(with(deltime_dat_timely,anydela==1),na.rm=T), sum(with(deltime_dat_late,anydela==1),na.rm=T)),
n = c(sum(with(deltime_dat_timely,!is.na(anydela)),na.rm=T), sum(with(deltime_dat_late,!is.na(anydela)),na.rm=T)))
age.test_time <- t.test(age ~ timely, data = deltime_dat)
income.test_time <- t.test(income ~ timely, data = deltime_dat)
deltime_tab2 <-  as.data.frame(
c(" ",
"Community births",
"Rural place of residence",
"Primiparous",
"Phone ownership",
"Any education",
"Any delivery attendant",
".",
" ",
"Age at conception, in years",
"Monthly income, in ETB"))
for(i in c("", "_timely", "_late")) {
deltime_tab2 <- cbind(deltime_tab2,
c(NA,
nrow(get(paste0("deltime_dat",i))),
sum(with(get(paste0("deltime_dat",i)),!is.na(rural)),na.rm=T),
sum(with(get(paste0("deltime_dat",i)),!is.na(primi)),na.rm=T),
sum(with(get(paste0("deltime_dat",i)),!is.na(phone)),na.rm=T),
sum(with(get(paste0("deltime_dat",i)),!is.na(edu)),na.rm=T),
sum(with(get(paste0("deltime_dat",i)),!is.na(anydela)),na.rm=T),
NA,
NA,
sum(with(get(paste0("deltime_dat",i)),!is.na(age)),na.rm=T),
sum(with(get(paste0("deltime_dat",i)),!is.na(income)),na.rm=T)),
c(NA,
NA,
sum(with(get(paste0("deltime_dat",i)),rural==1),na.rm=T),
sum(with(get(paste0("deltime_dat",i)),primi==1),na.rm=T),
sum(with(get(paste0("deltime_dat",i)),phone==1),na.rm=T),
sum(with(get(paste0("deltime_dat",i)),edu>0),na.rm=T),
sum(with(get(paste0("deltime_dat",i)),anydela==1),na.rm=T),
NA,
NA,
round(mean(get(paste0("deltime_dat",i))$age,na.rm=T),0),
round(mean(get(paste0("deltime_dat",i))$income,na.rm=T),0)) )
}
deltime_tab2[,3] = c(NA,
NA,
paste0(deltime_tab2[c(3:7),3], c(" ("," ("," ("," ("," ("), c(as.character(100*signif(as.numeric(deltime_tab2[c(3:7),3])/as.numeric(deltime_tab2[c(3:7),2]),2))), c(")",")",")",")")),
NA,
NA,
paste0(deltime_tab2[10,3], c(" ("), c(round(sd(deltime_dat$age,na.rm=T),0)), c(")")),
paste0(deltime_tab2[11,3], c(" ("), c(round(sd(deltime_dat$income,na.rm=T),0)), c(")")))
deltime_tab2[,5] = c(NA,
NA,
paste0(deltime_tab2[c(3:7),5], c(" ("," ("," ("," ("," ("), c(as.character(100*signif(as.numeric(deltime_tab2[c(3:7),5])/as.numeric(deltime_tab2[c(3:7),4]),2))), c(")",")",")",")")),
NA,
NA,
paste0(deltime_tab2[10,5], c(" ("), c(round(sd(subset(deltime_dat,timely==1)$age,na.rm=T),0)), c(")")),
paste0(deltime_tab2[11,5], c(" ("), c(round(sd(subset(deltime_dat,timely==1)$income,na.rm=T),0)), c(")")))
deltime_tab2[,7] = c(NA,
NA,
paste0(deltime_tab2[c(3:7),7], c(" ("," ("," ("," ("," ("), c(as.character(100*signif(as.numeric(deltime_tab2[c(3:7),7])/as.numeric(deltime_tab2[c(3:7),6]),2))), c(")",")",")",")")),
NA,
NA,
paste0(deltime_tab2[10,7], c(" ("), c(round(sd(subset(deltime_dat,timely==0)$age,na.rm=T),0)), c(")")),
paste0(deltime_tab2[11,7], c(" ("), c(round(sd(subset(deltime_dat,timely==0)$income,na.rm=T),0)), c(")")))
deltime_tab2 = cbind(deltime_tab2,
c(NA,
NA,
round(100*as.numeric(rural.test_time$estimate[2]) - 100*as.numeric(rural.test_time$estimate[1]),0),
round(100*as.numeric(primi.test_time$estimate[2]) - 100*as.numeric(primi.test_time$estimate[1]),0),
round(100*as.numeric(phone.test_time$estimate[2]) - 100*as.numeric(phone.test_time$estimate[1]),0),
round(100*as.numeric(anyedu.test_time$estimate[2]) - 100*as.numeric(anyedu.test_time$estimate[1]),0),
round(100*as.numeric(anydela.test_time$estimate[2]) - 100*as.numeric(anydela.test_time$estimate[1]),0),
NA,
NA,
round(as.numeric(age.test_time$estimate[1]) - as.numeric(age.test_time$estimate[2]),0),
round(as.numeric(income.test_time$estimate[1]) - as.numeric(income.test_time$estimate[2]),0)),
c(NA,
NA,
rural.test_time$p.value,
primi.test_time$p.value,
phone.test_time$p.value,
anyedu.test_time$p.value,
anydela.test_time$p.value,
NA,
NA,
age.test_time$p.value,
income.test_time$p.value) )
colnames(deltime_tab2) <- NULL
deltime_tab2[,9] <- as.numeric(deltime_tab2[,9])
deltime_tab2[,9] <- round(deltime_tab2[,9],3)
deltime_tab2[,c(9)][(deltime_tab2[,c(9)]==0.000)] <- "<0.001"
deltime_tab2[1,c(2:9)] = c("N", "n (%)", "N", "n (%)", "N", "n (%)", "Difference", "p-value")
deltime_tab2[9,c(2:9)] = c("N", "mean (sd)", "N", "mean (sd)", "N", "mean (sd)", "Difference", "p-value")
kable(deltime_tab2, align = "lcccccccc", booktabs = T,   caption = "Table 4: Sociodemographic characteristics among community births with timely versus late interviews") %>%
kable_classic(full_width = F, html_font = "Arial") %>%
add_indent(c(3:11), level_of_indent = 1) %>%
add_header_above(c("Characteristics" = 1, "Overall" = 2, "Timely (<24 hours)" = 2, "Late (>24 hours)" = 2, " " = 1, " " = 1),bold=T) %>%
row_spec(1, bold = T) %>%
row_spec(8, color = "white") %>%
row_spec(9, bold = T) %>%
save_kable("table4.png", zoom = 2)
#################TABLE 5: OPERATIONAL CHARACTERISTICS ASSOCIATED WITH TIMELLY BIRTH DATA COLLECTION###############
weekday.test_time <- prop.test(x = c(sum(with(deltime_dat_timely,weekday==1),na.rm=T), sum(with(deltime_dat_late,weekday==1),na.rm=T)),
n = c(sum(with(deltime_dat_timely,!is.na(weekday)),na.rm=T), sum(with(deltime_dat_late,!is.na(weekday)),na.rm=T)))
female_dc.test_time <- prop.test(x = c(sum(with(deltime_dat_timely,female_dc==1),na.rm=T), sum(with(deltime_dat_late,female_dc==1),na.rm=T)),
n = c(sum(with(deltime_dat_timely,!is.na(female_dc)),na.rm=T), sum(with(deltime_dat_late,!is.na(female_dc)),na.rm=T)))
comm_inf.test_time <- prop.test(x = c(sum(with(deltime_dat_timely,comm_inf==1),na.rm=T), sum(with(deltime_dat_late,comm_inf==1),na.rm=T)),
n = c(sum(with(deltime_dat_timely,!is.na(comm_inf)),na.rm=T), sum(with(deltime_dat_late,!is.na(comm_inf)),na.rm=T)))
deltime_tab3 <-  as.data.frame(
c(" ",
"Community births",
"Weekday births (Mon to Fri)",
"Female data collector",
"Community informants recruited"))
for(i in c("", "_timely", "_late")) {
deltime_tab3 <- cbind(deltime_tab3,
c(NA,
nrow(get(paste0("deltime_dat",i))),
sum(with(get(paste0("deltime_dat",i)),!is.na(weekday)),na.rm=T),
sum(with(get(paste0("deltime_dat",i)),!is.na(female_dc)),na.rm=T),
sum(with(get(paste0("deltime_dat",i)),!is.na(comm_inf)),na.rm=T)),
c(NA,
NA,
sum(with(get(paste0("deltime_dat",i)),weekday==1),na.rm=T),
sum(with(get(paste0("deltime_dat",i)),female_dc==1),na.rm=T),
sum(with(get(paste0("deltime_dat",i)),comm_inf==1),na.rm=T)) )
}
deltime_tab3[,3] = c(NA,
NA,
paste0(deltime_tab3[c(3:5),3], c(" ("," ("," ("), c(as.character(100*signif(as.numeric(deltime_tab3[c(3:5),3])/as.numeric(deltime_tab3[c(3:5),2]),2))), c(")",")",")")) )
deltime_tab3[,5] = c(NA,
NA,
paste0(deltime_tab3[c(3:5),5], c(" ("," ("," ("), c(as.character(100*signif(as.numeric(deltime_tab3[c(3:5),5])/as.numeric(deltime_tab3[c(3:5),4]),2))), c(")",")",")")) )
deltime_tab3[,7] = c(NA,
NA,
paste0(deltime_tab3[c(3:5),7], c(" ("," ("," ("), c(as.character(100*signif(as.numeric(deltime_tab3[c(3:5),7])/as.numeric(deltime_tab3[c(3:5),6]),2))), c(")",")",")")) )
deltime_tab3 = cbind(deltime_tab3,
c(NA,
NA,
round(100*as.numeric(weekday.test_time$estimate[2]) - 100*as.numeric(weekday.test_time$estimate[1]),0),
round(100*as.numeric(female_dc.test_time$estimate[2]) - 100*as.numeric(female_dc.test_time$estimate[1]),0),
round(100*as.numeric(comm_inf.test_time$estimate[2]) - 100*as.numeric(comm_inf.test_time$estimate[1]),0)),
c(NA,
NA,
weekday.test_time$p.value,
female_dc.test_time$p.value,
comm_inf.test_time$p.value) )
colnames(deltime_tab3) <- NULL
deltime_tab3[,9] <- as.numeric(deltime_tab3[,9])
deltime_tab3[,9] <- round(deltime_tab3[,9],3)
deltime_tab3[,c(9)][(deltime_tab3[,c(9)]==0.000)] <- "<0.001"
deltime_tab3[1,c(2:9)] = c("N", "n (%)", "N", "n (%)", "N", "n (%)", "Difference", "p-value")
kable(deltime_tab3, align = "lcccccccc", booktabs = T,   caption = "Table 5: Operational characteristics among community births with timely versus late interviews") %>%
kable_classic(full_width = F, html_font = "Arial") %>%
add_indent(c(3:5), level_of_indent = 1) %>%
add_header_above(c("Characteristics" = 1, "Overall" = 2, "Timely (<24 hours)" = 2, "Late (>24 hours)" = 2, " " = 1, " " = 1),bold=T) %>%
row_spec(1, bold = T) %>%
save_kable("table5.png", zoom = 2)
###########FIGURE 0: COMMUNITY BIRTHS BY MONTH############
delloc_dat$MY = format(delloc_dat$dodel,"%Y-%m")
count_tot = data.frame(table(delloc_dat$MY))
count_comm= delloc_dat %>% group_by(MY) %>% summarise(sum = sum(location_b=="community"))
colnames(count_tot) = c("MY", "total")
colnames(count_comm) = c("MY", "community")
count =  left_join(count_tot, count_comm, by = c("MY" = "MY"))
count$perc = 100*(count$comm/count$total)
ggplot(subset(count,MY != "2018-02" & MY != "2018-10" & MY != "2020-04"), aes(x = MY, y = perc, group=1)) +
geom_line() +
geom_point() +
theme_bw()+
theme(axis.text.x=element_text(angle = -90, hjust = 0)) +
xlab("Year and month of birth") +  ylab("Percentage of community births") +
labs(title = "Figure 0: Percentage of community births over time") +
ggsave("figure0.png", width = 10, height = 6)
###########Additional pilot analysis: Data collector performance#############
count_tot_dc = data.frame(table(deltime_dat$dcid_b))
count_timely_dc = deltime_dat %>% group_by(dcid_b) %>% summarise(sum = sum(timing=="<24 hours"))
colnames(count_tot_dc) = c("dcid_b", "total")
colnames(count_timely_dc) = c("dcid_b", "timely")
count_dc =  left_join(count_tot_dc, count_timely_dc, by = c("dcid_b" = "dcid_b"))
count_dc$perc = round(100*(count_dc$timely/count_dc$total),0)
###########Additional pilot analysis: Data collector performance#############
count_tot_dc = data.frame(table(deltime_dat$dcid_b))
count_timely_dc = deltime_dat %>% group_by(dcid_b) %>% summarise(sum = sum(timing=="<24 hours"))
colnames(count_tot_dc) = c("dcid_b", "total")
colnames(count_timely_dc) = c("dcid_b", "timely")
count_dc =  left_join(count_tot_dc, count_timely_dc, by = c("dcid_b" = "dcid_b"))
count_dc$perc = round(100*(count_dc$timely/count_dc$total),0)
###########PREAMBLE###################
# Study title: Estimates and determinants of health facility delivery in the Birhan maternal and child health cohort study, 2018–2020, Amhara region, Ethiopia
# Description: See analysis plan (https://drive.google.com/file/d/1KUjEXzkrfVDHgOufiHUf6A9k-dppCDxY/view?usp=sharing)
# Notes: This code was written to create the dataset for this study. Further analysis and creation of summary figures
# are available in the stata code. This code has been annotated to explain what different sections of code
# accomplish and how.
###########SETUP###################
#Clearing the global environment and console
rm(list=ls())
cat("\014")
#Calling necessary packages
library(tidyverse) #collection of packages for data manipulation and visualization (including ggplot)
library(kableExtra) #package to create tables in R
library(writexl) #package to read and export excel files
options(knitr.kable.NA = '') #Adding an option that NAs are displayed as empty cells in tables
#setting working directory (i.e. the folder where the results will be exported to)
setwd(paste0(Sys.getenv("gdrive"), "20. Birhan/11. Analysis/1. Manuscript analysis/Community births/x. Analysis output"))
#Importing dataset and keeping only necessary variables
mch <- readr::read_csv(paste0(Sys.getenv("gdrive"), "24. Birhan Data/3.MCH/1. Data/3. Indexed/all_data_combined.csv"), guess_max = 5000) %>%  #All MCH data. very large dataset so can take a while to import.
select_at(vars(c("uuid", "enroll", "intdt_enroll", "dcid_b", "hhid_enroll", "enroll", "location_b","delloc_b","facility_b", "lifehrs_b",
"intdt_b", "dodel","nlivebirth_enroll", "nstillbirth_enroll", "pdelatt_b", "delvatd_b", "wishdelhf_b",	"wnwishdelhf_b",
"wnwishdelhfos_b",	"limdelhf_b",	"limdelhfos_b"))) %>% #keep only relevant variables
mutate(intdt_b = as.Date(intdt_b, "%d%b%Y"), #converting dates from string to date format
intdt_enroll = as.Date(intdt_enroll, "%d%b%Y"),
dodel = as.Date(dodel, "%d%b%Y"))
census <- readr::read_csv(paste0(Sys.getenv("gdrive"), "24. Birhan Data/1. Census/1. Data/3. Indexed/census_ind.csv"), guess_max = 100000) %>%
select_at(vars(c("uuid","monthly_income","mobile_telephone", "tv", "radio", "edutype", "edulevel", "hftime", "hfdist"))) %>%
mutate(dob = as.Date(dob, "%d%b%Y"))
ga <- readr::read_csv(paste0(Sys.getenv("gdrive"), "24. Birhan Data/4. Specialize/MCH Phase 1/specialize_mch_ga_unique_uuid.csv")) %>%
select_at(vars(c("uuid", "intdt_enroll", "enroll", "ga", "ga_date", "ga_dodel"))) %>%
mutate(ga_date = as.Date(ga_date, "%d%b%Y"),
intdt_enroll = as.Date(intdt_enroll, "%d%b%Y"))
anc_dat <- readr::read_csv(paste0(Sys.getenv("gdrive"), "24. Birhan Data/4. Specialize/MCH Phase 1/specialize_mch_anc.csv")) %>%
select_at(vars(c("uuid", "intdt_enroll", "enroll", "anc_vis"))) %>%
mutate(intdt_enroll = as.Date(intdt_enroll, "%d%b%Y"))
bo <- readr::read_csv(paste0(Sys.getenv("gdrive"), "24. Birhan Data/4. Specialize/MCH Phase 1/specialized_mch_birthoutcomes.csv")) %>%
select_at(vars(c("uuid", "intdt_enroll", "enroll", "preg_outcome"))) %>%
mutate(intdt_enroll = as.Date(intdt_enroll, "%d%b%Y"))
phase1_participants <- readr::read_csv(paste0(Sys.getenv("gdrive"), "24. Birhan Data/4. Specialize/Census/phase1_participants.csv"), guess_max = 10000) %>%
mutate(dob_pmap = as.Date(dob, "%d%b%Y")) %>%
select(uuid, dob_pmap)
###########TABLE 2: SOCIODEMOGRAPHIC DIFFERNCES BY LOCATION OF DELIVERY###################
#Creating separate facility and community birth datasets
delloc_dat_fac = subset(delloc_dat, location_b == "facility")
delloc_dat_comm = subset(delloc_dat, location_b == "community")
cat("\014")
#Calling necessary packages
library(tidyverse) #collection of packages for data manipulation and visualization (including ggplot)
library(kableExtra) #package to create tables in R
library(writexl) #package to read and export excel files
options(knitr.kable.NA = '') #Adding an option that NAs are di
#setting working directory (i.e. the folder where the results will be exported to)
setwd(paste0(Sys.getenv("gdrive"), "20. Birhan/11. Analysis/1. Manuscript analysis/Community births/x. Analysis output"))
